name: Anchore SLSA3 SBOM builder

permissions:
  contents: read

defaults:
  run:
    shell: bash

on:
  workflow_call:

    secrets:
      registry-password:
        required: false
        description: "The registry password"

      github-token:
        description: "Authorized secret GitHub Personal Access Token. Defaults to github.token"
        required: false

    inputs:
      path:
        required: false
        description: "A path to a directory on the filesystem to scan"
        default: "."
        type: string

      # TODO: support for workflow_dispatch event
      # by providing a `tag-name` input.
      file:
        required: false
        description: "A file in a release asset to scan"
        type: string

      image:
        required: false
        description: "A container image to scan"
        type: string

      registry-username:
        required: false
        description: "The registry username"
        type: string

      format:
        required: false
        description: "The SBOM format to export"
        default: "spdx-json"
        type: string

      artifact-name:
        description: "The name to use for the SBOM file generated by this action"
        required: false
        type: string

      # output-file:
      #   required: false
      #   description: "A file location to output the SBOM"
      #   type: string

      syft-version:
        required: false
        description: "The version of Syft to use"
        type: string

      dependency-snapshot:
        required: false
        description: "Upload to GitHub dependency snapshot API"
        default: false
        type: boolean
        #default: "false"
        #type: string

      upload-artifact:
        required: false
        description: "Upload artifact to workflow"
        default: true
        type: boolean
        #default: "true"
        #type: string

      upload-release-assets:
        required: false
        description: "Upload release assets"
        default: true
        type: boolean
#         default: "true"
#         type: string

      slsa-rekor-log-public:
        description: "Allow publication of your repository name on the public Rekor log"
        required: false
        type: boolean
        default: false

      # TODO    
      # provenance-overwrite:
      #   description: "overwrite provenance if already present"
      #   required: false
      #   type: boolean
      #   default: false

jobs:
  slsa-setup:
    permissions:
      id-token: write # For token creation.
    outputs:
      slsa-token: ${{ steps.generate.outputs.slsa-token }}
    runs-on: ubuntu-latest
    steps:
      - name: Generate the token
        id: generate
        uses: slsa-framework/slsa-github-generator/actions/delegator/setup-token@main
        with:
          slsa-workflow-recipient: "delegator_generic_slsa3.yml"
          slsa-rekor-log-public: ${{ inputs.slsa-rekor-log-public }}
          slsa-runner-label: "ubuntu-latest"
          slsa-build-action-path: "./internal/sbom-wrapper"
          slsa-workflow-inputs: ${{ toJson(inputs) }}
          slsa-workflow-masked-inputs: registry-username

  slsa-run:
    needs: [slsa-setup]
    permissions:
      id-token: write # For signing.
      contents: write # For asset uploads. 
      packages: write
    #uses: slsa-framework/slsa-github-generator/.github/workflows/delegator_generic_slsa3.yml@main
    uses: laurentsimon/slsa-github-generator/.github/workflows/delegator_generic_slsa3.yml@feat/byob-diffinputs
    #uses: slsa-framework/slsa-github-generator/.github/workflows/delegator_generic_slsa3.yml@v1.5.0
    with:
      slsa-token: ${{ needs.slsa-setup.outputs.slsa-token }}
    secrets:
      secret1: ${{ secrets.registry-password }}
      secret2: ${{ secrets.github-token }}

  slsa-publish:
    needs: [slsa-run]
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write # For asset uploads. Optional
    runs-on: ubuntu-latest
    steps:
      - name: Download attestations
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.slsa-run.outputs.attestations-download-name }}

      - name: Verify attestations
        env:
          SLSA_ATTESTATION_DOWNLOAD_NAME: ${{ needs.slsa-run.outputs.attestations-download-name }}
        run: |
          echo "download from $SLSA_ATTESTATION_DOWNLOAD_NAME"

          # TODO: Verify thru slsa-verifier

      - name: Upload SBOM provenance
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v0.1.15
        with:
          files: |
            *.sigstore


        

